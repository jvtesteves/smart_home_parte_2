// Arquivo: smart_home.proto

syntax = "proto3";

package smart_home;

message Empty{}

service LampService {
  rpc SetState(LampRequest) returns (LampResponse) {} 
  rpc GetState(Empty) returns (LampResponse) {}
}

message LampRequest {
  bool state = 1;
}

message LampResponse {
  bool success = 1;
}

service ThermostatService {
  rpc SetTemperature(TemperatureRequest) returns (TemperatureResponse) {}
  rpc UpdateDesiredTemperature(TemperatureRequest) returns (TemperatureResponse) {}
  rpc GetTemperature(Empty) returns (TemperaturaResponseNumber) {}
}

message TemperatureRequest {
  float temperature = 1;
}

message TemperatureResponse {
  bool success = 1;
}

message TemperaturaResponseNumber {
  float temperature = 1; 
}

service IrrigatorService {
  rpc SetHumityIrrigator(IrrigatorRequest) returns (IrrigatorResponse) {}
  rpc SetStateIrrigator(IrrigatorRequest) returns (IrrigatorResponse) {}
  rpc GetStateIrrigator(Empty) returns (IrrigatorResponse) {}
}

message humidityRequest {
  float humidity = 1;
}

message IrrigatorRequest {
  bool state = 1;
}

message IrrigatorResponse {
  bool success = 1;
}

// Service and messages to client interaction
service ClientService {
  rpc SetActuatorValues(ActuatorRequest) returns (ObjectResponse);
  rpc GetActuatorValues(ActuatorRequest) returns (ObjectResponse);
  rpc GetSensorValues(SensorRequest) returns (stream ObjectResponse);
}

message ActuatorRequest {
  ActuatorType type = 1;
  string value = 2;
}

message SensorRequest {
  SensorType type = 1;
}

message ObjectValue {
  string type = 1;
  string value = 2;
}

message ObjectResponse {
  repeated ObjectValue values = 1;
}

enum ActuatorType {
  LAMP = 0;
  THERMOSTAT = 1;
  IRRIGATOR = 2;
}

enum SensorType {
  PRESENCE = 0;
  TEMPERATURE = 1;
  HUMIDITY = 2;
}
